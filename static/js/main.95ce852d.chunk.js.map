{"version":3,"sources":["components/useAbstractForm.js","components/Loading.js","components/Debug.js","components/ContactForm.js","components/RegisterForm.js","App.js","index.js"],"names":["useAbstractForm","initialState","React","useState","validatingBeforeSubmit","isSubmitting","touched","errors","state","setState","validateForm","useCallback","validate","values","s","useEffect","submitComplete","Object","keys","length","setTimeout","handleChange","event","name","target","value","newState","handleSubmit","preventDefault","touchedAll","fields","i","getValue","getErrors","debug","Loading","props","className","xmlns","width","height","viewBox","d","attributeName","from","to","dur","begin","repeatCount","statusText","Debug","style","margin","borderRadius","background","boxShadow","fontSize","padding","overflowX","JSON","stringify","ContactForm","aForm","email","onSubmit","htmlFor","type","onChange","id","RegisterForm","email_again","App","Component","render","aria-label","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.95ce852d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function useAbstractForm(initialState) {\n  const [state, setState] = React.useState({\n    validatingBeforeSubmit: false,\n    isSubmitting: false,\n    touched: {},\n    errors: {},\n    ...initialState,\n  });\n\n  const handleChange = (event) => {\n    // generic change handler\n    // takes the name and the value of the field and updates the state with it.\n    const name = event.target.name;\n    const value = event.target.value;\n    const newState = {\n      ...state,\n      values: { ...state.values, [name]: value },\n      touched: { ...state.touched, [name]: true },\n    };\n    setState(newState);\n  };\n\n  const getValue = (name) => {\n    return state.values[name];\n  };\n  const getErrors = (name) => {\n    return state.errors[name];\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // mark all fields to be touched so the validation runs on them.\n    // TODO: abstract away validation\n    const touchedAll = {};\n    const fields = Object.keys(state.values);\n    for (var i in fields) {\n      touchedAll[fields[i]] = true;\n    }\n    setState({ ...state, touched: touchedAll, validatingBeforeSubmit: true });\n  };\n\n  const validateForm = React.useCallback(() => {\n    // validate the form if it provides such function\n    if (state.validate) {\n      const errors = state.validate(state.values, state.touched);\n      // new state\n      // const newState = ;\n      setState((s) => ({\n        ...s,\n        errors: errors,\n        validatingBeforeSubmit: false,\n      }));\n      return errors;\n    }\n    return {};\n  }, [state.validate, state.values, state.touched]);\n\n  // Event handlers simply set a new state and the validation is performed as a side effect\n  // validation as a side effect; runs only when state.values change\n  React.useEffect(() => {\n    // simulate a call to an API service\n    const submitComplete = () => {\n      setState((s) => ({\n        ...s,\n        errors: {},\n        touched: {},\n        isSubmitting: false,\n        validatingBeforeSubmit: false,\n      }));\n    };\n\n    const errors = validateForm();\n    // no errors and validating before submit\n    if (Object.keys(errors).length === 0 && state.validatingBeforeSubmit) {\n      setState((s) => ({ ...s, isSubmitting: true }));\n      // simulate API call\n      setTimeout(submitComplete, 2000);\n    }\n  }, [validateForm, state.validatingBeforeSubmit]);\n\n  // return what you want to expose in your form\n  return {\n    handleChange,\n    handleSubmit,\n    getValue,\n    getErrors,\n    debug: { ...state },\n    ...state,\n  };\n}\n","import React from 'react'\n\nexport const Loading = (props) => (\n  <div className=\"loading\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35.7\" height=\"37.2\" viewBox=\"-287 378.9 35.7 37.2\">\n    <path d=\"M-266.1 380.1c-.8-.8-1.9-1.3-3-1.3s-2.2.4-3 1.3c-.8.8-1.3 1.9-1.3 3 0 1.2.4 2.2 1.3 3 .8.8 1.9 1.3 3 1.3s2.2-.4 3-1.3c.8-.8 1.3-1.9 1.3-3-.1-1.1-.5-2.1-1.3-3zm-2 4.1c-.3.3-.6.4-1 .4s-.7-.1-1-.4c-.3-.3-.4-.6-.4-1s.1-.7.4-1c.3-.3.6-.4 1-.4s.7.1 1 .4c.3.3.4.6.4 1 0 .3-.2.7-.4 1z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path  d=\"M-255 384c-1-1-2.1-1.4-3.6-1.4-1.4 0-2.6.5-3.5 1.5-1 1-1.5 2.2-1.5 3.5 0 1.4.5 2.6 1.5 3.5 1 1 2.2 1.5 3.5 1.5 1.4 0 2.6-.5 3.5-1.5 1-1 1.5-2.2 1.5-3.5 0-1.5-.4-2.6-1.4-3.6zm-2.1 5.1c-.4.4-.9.6-1.5.6s-1.1-.2-1.5-.6c-.4-.4-.6-.9-.6-1.5s.2-1.1.6-1.5c.4-.4.9-.6 1.5-.6s1.1.2 1.5.6c.4.4.6.9.6 1.5.1.5-.1 1-.6 1.5z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.1s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path  d=\"M-252.1 396.1c-.6-.6-1.2-.8-2-.8s-1.5.3-2 .8c-.6.6-.8 1.2-.8 2s.3 1.5.8 2c.6.6 1.2.8 2 .8s1.5-.3 2-.8c.6-.6.8-1.2.8-2s-.3-1.4-.8-2z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.2s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path d=\"M-256.5 406.7c-.6-.6-1.2-.9-2-.9s-1.4.3-2 .9c-.6.6-.9 1.2-.9 2s.3 1.5.9 2c.6.6 1.2.8 2 .8s1.5-.3 2-.8c.6-.6.8-1.2.8-2 0-.7-.3-1.4-.8-2z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.3s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path  d=\"M-269.2 410.3c-.8 0-1.5.3-2 .8-.6.6-.8 1.2-.8 2s.3 1.5.8 2c.6.6 1.2.8 2 .8s1.5-.3 2-.8c.6-.6.8-1.2.8-2s-.3-1.5-.8-2-1.2-.8-2-.8z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.4s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path  d=\"M-277.8 406.7c-.6-.6-1.2-.9-2-.9s-1.5.3-2 .9c-.6.6-.8 1.2-.8 2s.3 1.5.8 2c.6.6 1.2.8 2 .8s1.4-.3 2-.8c.6-.6.9-1.2.9-2 0-.7-.3-1.4-.9-2z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.5s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path d=\"M-284.2 395.3c-.8 0-1.5.3-2 .8-.6.6-.8 1.2-.8 2s.3 1.5.8 2c.6.6 1.2.8 2 .8s1.5-.3 2-.8c.6-.6.8-1.2.8-2s-.3-1.5-.8-2-1.2-.8-2-.8z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.6s\" repeatCount=\"indefinite\"/>\n    </path>\n    <path  d=\"M-279.8 388.3c-.2 0-.4-.1-.5-.2-.1-.1-.2-.3-.2-.5s.1-.3.2-.5c.1-.1.3-.2.5-.2s.4.1.5.2c.1.1.2.3.2.5s-.1.4-.2.5c-.1.1-.3.2-.5.2zm0-4.3c-1 0-1.8.4-2.5 1.1-.7.7-1.1 1.5-1.1 2.5s.4 1.8 1.1 2.5c.7.7 1.5 1.1 2.5 1.1s1.8-.4 2.5-1.1c.7-.7 1.1-1.5 1.1-2.5s-.4-1.8-1.1-2.5c-.6-.8-1.5-1.1-2.5-1.1z\">\n      <animate attributeName=\"opacity\" from=\"1\" to=\"0\" dur=\"0.8s\" begin=\"0.7s\" repeatCount=\"indefinite\"/>\n    </path>\n  </svg>\n    <span className=\"loading-status\">{props.statusText ? props.statusText: 'Loading...'}</span>\n  </div>\n\n)","import React from 'react'\n\nexport const Debug = (props) => (\n  <div style={{\n    margin: '3rem 0',\n    borderRadius: 4,\n    background: '#f6f8fa',\n    boxShadow: '0 0 1px #eee inset'\n  }}>\n    <div className=\"debug\">\n    Form State\n      <pre style={{\n        fontSize: '0.65rem',\n        padding: '0.25rem 0.5rem',\n        overflowX: 'scroll'\n      }}>\n       {JSON.stringify(props, null, 2)}\n      </pre>\n    </div>\n  </div>\n)\n  \n","import React from \"react\";\nimport { useAbstractForm } from \"./useAbstractForm\";\nimport { Loading } from \"./Loading\";\nimport { Debug } from \"./Debug\";\n\nexport function ContactForm(props) {\n  // initial state must list default values for all fields.\n  // The initial values can be overriden by props\n  const initialState = {\n    ...props,\n    values: { name: \"\", email: \"\", ...props.values },\n    validate: function (values, touched) {\n      let errors = {};\n      if (touched.name && values.name.length === 0) {\n        errors.name = \"Name is required\";\n      }\n      if (touched.email && values.email.length === 0) {\n        errors.email = \"Email is required\";\n      }\n      return errors;\n    },\n  };\n  const aForm = useAbstractForm(initialState);\n  const values = aForm.values;\n  const errors = aForm.errors;\n  const touched = aForm.touched;\n  return aForm.isSubmitting ? (\n    <div>\n      <Loading statusText=\"Simulate Submit\" /> <Debug {...aForm.debug} />\n    </div>\n  ) : (\n    <form onSubmit={aForm.handleSubmit}>\n      <fieldset>\n        <legend>Contact Us</legend>\n        <div\n          className={\n            \"form-field-wrapper \" +\n            (errors.name && touched.name ? \"problem\" : \"\")\n          }\n        >\n          <div className=\"field-status\">{errors.name}</div>\n          <div className=\"field-info\">\n            <label htmlFor=\"name\">Name</label>\n          </div>\n          <div className=\"field-control\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={aForm.handleChange}\n              id=\"name\"\n            />\n          </div>\n        </div>\n\n        <div\n          className={\n            \"form-field-wrapper \" +\n            (errors.email && touched.email ? \"problem\" : \"\")\n          }\n        >\n          <div className=\"field-status\">{errors.email}</div>\n          <div className=\"field-info\">\n            <label htmlFor=\"email\">Email</label>\n          </div>\n          <div className=\"field-control\">\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={values.email}\n              onChange={aForm.handleChange}\n              id=\"email\"\n            />\n          </div>\n        </div>\n\n        <div className=\"form-field-wrapper\">\n          <div className=\"field-control\">\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\n          </div>\n        </div>\n      </fieldset>\n      <Debug {...aForm.debug} />\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Debug } from \"./Debug\";\nimport { Loading } from \"./Loading\";\nimport { useAbstractForm } from \"./useAbstractForm\";\n\nexport function RegisterForm(props) {\n  const aForm = useAbstractForm({\n    values: { name: \"\", email: \"\", email_again: \"\" },\n    ...props,\n    validate: function (values, touched) {\n      let errors = {};\n      if (touched.name && values.name.length === 0) {\n        errors.name = \"Name is required\";\n      }\n      if (touched.email && values.email.length === 0) {\n        errors.email = \"Email is required\";\n      }\n      if (touched.email_again && values.email !== values.email_again) {\n        errors.email_again = \"The 2 email address has to match\";\n      }\n      return errors;\n    },\n  });\n  const values = aForm.values;\n  const errors = aForm.errors;\n  const touched = aForm.touched;\n  return aForm.isSubmitting ? (\n    <div>\n      <Loading statusText=\"Simulate Submit\" /> <Debug {...aForm.debug} />\n    </div>\n  ) : (\n    <form onSubmit={aForm.handleSubmit}>\n      <fieldset>\n        <legend>Sign Up</legend>\n        <div\n          className={\n            \"form-field-wrapper \" +\n            (errors.name && touched.name ? \"problem\" : \"\")\n          }\n        >\n          <div className=\"field-status\">{errors.name}</div>\n          <div className=\"field-info\">\n            <label htmlFor=\"name\">Name</label>\n          </div>\n          <div className=\"field-control\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={aForm.handleChange}\n              id=\"name\"\n            />\n          </div>\n        </div>\n\n        <div\n          className={\n            \"form-field-wrapper \" +\n            (errors.email && touched.email ? \"problem\" : \"\")\n          }\n        >\n          <div className=\"field-status\">{errors.email}</div>\n          <div className=\"field-info\">\n            <label htmlFor=\"email\">Email</label>\n          </div>\n          <div className=\"field-control\">\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={values.email}\n              onChange={aForm.handleChange}\n              id=\"email\"\n            />\n          </div>\n        </div>\n\n        <div\n          className={\n            \"form-field-wrapper \" +\n            (errors.email_again && touched.email_again ? \"problem\" : \"\")\n          }\n        >\n          <div className=\"field-status\">{errors.email_again}</div>\n          <div className=\"field-info\">\n            <label htmlFor=\"emailAgain\">Email Again</label>\n          </div>\n          <div className=\"field-control\">\n            <input\n              type=\"text\"\n              name=\"email_again\"\n              value={values.email_again}\n              onChange={aForm.handleChange}\n              id=\"emailAgain\"\n            />\n          </div>\n        </div>\n\n        <div className=\"form-field-wrapper\">\n          <div className=\"field-control\">\n            <input className=\"button\" type=\"submit\" value=\"Register\" />\n          </div>\n        </div>\n      </fieldset>\n      <Debug {...aForm.debug} />\n    </form>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { ContactForm, RegisterForm } from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>React Hooks with Forms</h1>\n          <p>\n            With hooks common functionality can be abstracted away from the\n            concrete component. In this example the diffrent forms use the same\n            logic for handling state.\n          </p>\n        </header>\n        <section aria-label=\"Forms\">\n          <div className=\"form-wrapper\">\n            <ContactForm values={{ name: \"John\" }} />\n          </div>\n\n          <div className=\"form-wrapper\">\n            <RegisterForm />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}